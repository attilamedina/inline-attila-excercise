trigger:
  branches:
    include:
#    - refs/heads/master
    - master/Application/*
  paths:
    include:
    - /
  batch: True
name: $(date:yyyyMMdd)$(rev:.r)
jobs:
- job: Phase_1
  displayName: Agent job 1
  timeoutInMinutes: 0
  pool:
    vmImage: ubuntu-18.04
  steps:
  - checkout: self
  - task: AzureResourceGroupDeployment@2
    displayName: Azure Deployment:Create Azure Container Registry
    inputs:
      ConnectedServiceName: dda97263-17a6-4d8c-aade-95936f0de8f1
      resourceGroupName: inlinemarket-excercise-rg
      location: West Europe
      csmFile: $(System.DefaultWorkingDirectory)/**/containerRegistry-template.json
      overrideParameters: -registryName "inlinemarketexcerciseacr" -registryLocation "South Central US" -registrySku "Standard"
  - task: Docker@1
    displayName: Build an image
    inputs:
      azureSubscriptionEndpoint: dda97263-17a6-4d8c-aade-95936f0de8f1
      azureContainerRegistry: inlinemarketexcerciseacr.azurecr.io
      imageName: inlinemarketexcercise:$(Build.BuildId)
  - task: Docker@1
    displayName: Push an image
    inputs:
      azureSubscriptionEndpoint: dda97263-17a6-4d8c-aade-95936f0de8f1
      azureContainerRegistry: inlinemarketexcerciseacr.azurecr.io
      command: Push an image
      imageName: inlinemarketexcercise:$(Build.BuildId)
  - task: CopyFiles@2
    displayName: Copy ARM templates
    inputs:
      SourceFolder: ArmTemplates
      TargetFolder: $(build.artifactstagingdirectory)
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifact
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
...
